# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Workflowを他のワークフローから呼べるように・・・
  workflow_call:
    outputs:
        git_hash:
          description: "git hash on build time"
          value: ${{ github.sha }}
    # outputs:
    #   artifact_name:
    #     description: "The output var"
    #     value: ${{ jobs.build.outputs.artifact_name }}


  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os: [win, linux]
        enviroment: [release, debug]
        # 同じプロパティを持つ場合、上書きする
        include:
          - os: win
            files:
              - README.md
              - share
          - os: linux
            files:
              - README.md
              - result.txt
              - share

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      artifact_name: ${{ steps.upload_artifact.outputs.artifact_name }}

    env:
      OUTPUT_FILENAME: "${{ matrix.os }}-${{ matrix.enviroment }}-${{ github.sha }}"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! ${{ matrix.os }}-${{ matrix.enviroment }} | tee result.txt

      - name: Matrix include test
        run: echo ${{ join(matrix.files, ' ') }}

      - name: Env test
        run: echo "${{ env.OUTPUT_FILENAME }}"

      # Runs a set of commands using the runners shell
      - name: Packaging binary
        run: tar cvzf ${{ env.OUTPUT_FILENAME }}.tar.gz ${{ join(matrix.files, ' ') }}

      - name: Archive production artifacts
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: ${{ env.OUTPUT_FILENAME }}.tar.gz
          retention-days: 7
          compression-level: 0 # no compression

  # build-after: